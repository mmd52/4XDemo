rm(train)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
summary(smlr_Model_1)
log(CDdat)
log(CDdat$Total_Cost_of_Distribution)
smlr_Model_1 <- lm(log(Total_Cost_of_Distribution)~.,data=training_data)
summary(smlr_Model_1)
ncol<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO",
"Product_Line","Product_Type","N_Parts",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
predValues<-predict(smlr_Model_1,subset(testing_data,select=ncol))
predValues
1/predValues
rm(list=ls())
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
View(head(dat))
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
ndat<-dat[(dat$Cost_of_Goods_Sold_EURO<200000)&
(dat$Cost_of_Goods_Sold_EURO>0)&
(dat$Total_Cost_of_Distribution<150000)&
(dat$Total_Cost_of_Distribution>0),]
CDdat<-subset(ndat, select=col)
rm(dat,ndat)
set.seed(999)
train<-sample(1:nrow(CDdat),round(nrow(CDdat)*0.8,0),replace = F)
training_data<-CDdat[train,]
testing_data<-CDdat[-train,]
rm(train)
smlr_Model_1 <- lm(log(Total_Cost_of_Distribution)~.,data=training_data)
summary(smlr_Model_1)
predValues<-predict(smlr_Model_1,testing_data$Cost_of_Goods_Sold_EURO)
ncol<-c("Cost_of_Goods_Sold_EURO")
predValues<-predict(smlr_Model_1,subset(testing_data,select=ncol))
rm(list=ls())
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
train<-sample(1:nrow(CDdat),round(nrow(CDdat)*0.8,0),replace = F)
training_data<-CDdat[train,]
testing_data<-CDdat[-train,]
rm(train)
smlr_Model_1 <- lm(log(Total_Cost_of_Distribution)~.,data=training_data)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
summary(smlr_Model_1)
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
ndat<-dat[(dat$Cost_of_Goods_Sold_EURO<200000)&
(dat$Cost_of_Goods_Sold_EURO>0)&
(dat$Total_Cost_of_Distribution<150000)&
(dat$Total_Cost_of_Distribution>0),]
CDdat<-subset(ndat, select=col)
rm(dat,ndat)
set.seed(999)
train<-sample(1:nrow(CDdat),round(nrow(CDdat)*0.8,0),replace = F)
training_data<-CDdat[train,]
testing_data<-CDdat[-train,]
rm(train)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
summary(smlr_Model_1)
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
rm(dat,ndat)
set.seed(999)
train<-sample(1:nrow(CDdat),round(nrow(CDdat)*0.8,0),replace = F)
training_data<-CDdat[train,]
testing_data<-CDdat[-train,]
rm(train)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
summary(smlr_Model_1)
ncol<-c("Cost_of_Goods_Sold_EURO")
predValues<-predict(smlr_Model_1,subset(testing_data,select=ncol))
View(head(cbind(predValues,testing_data),20))
View(head(cbind(predValues,testing_data),100))
View(head(cbind(predValues,testing_data),500))
View(head(cbind(predValues,testing_data),32000))
a<-cbind(predValues,testing_data)
summary(a)
write.csv(a,"a.csv")
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Product_Type")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
rm(dat,ndat)
train<-sample(1:nrow(CDdat),round(nrow(CDdat)*0.8,0),replace = F)
training_data<-CDdat[train,]
testing_data<-CDdat[-train,]
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
summary(smlr_Model_1)
ncol<-c("Cost_of_Goods_Sold_EURO","Product_Type")
predValues<-predict(smlr_Model_1,subset(testing_data,select=ncol))
a<-cbind(predValues,testing_data)
View(a)
summary(a)
smlr_Model_1 <- lm(log(Total_Cost_of_Distribution)~.,data=training_data)
smlr_Model_1 <- lm(log(Total_Cost_of_Distribution)~.,data=training_data)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
summary(smlr_Model_1)
ncol<-c("Cost_of_Goods_Sold_EURO","Product_Type")
predValues<-predict(smlr_Model_1,subset(testing_data,select=ncol))
a<-cbind(predValues,testing_data)
summary(a)
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Product_Line")
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Product_Line")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
ndat<-dat[(dat$Cost_of_Goods_Sold_EURO<200000)&
(dat$Cost_of_Goods_Sold_EURO>0)&
(dat$Total_Cost_of_Distribution<150000)&
(dat$Total_Cost_of_Distribution>0),]
CDdat<-subset(dat, select=col)
set.seed(999)
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Product_Line")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
set.seed(999)
train<-sample(1:nrow(CDdat),round(nrow(CDdat)*0.8,0),replace = F)
training_data<-CDdat[train,]
testing_data<-CDdat[-train,]
rm(train)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
summary(smlr_Model_1)
ncol<-c("Cost_of_Goods_Sold_EURO","Product_Line")
predValues<-predict(smlr_Model_1,subset(testing_data,select=ncol))
a<-cbind(predValues,testing_data)
summary(a)
write.csv(a,"a.csv")
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Product_Line","Product_Type")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
rm(dat,ndat)
set.seed(999)
#Splitting data into training and testing
train<-sample(1:nrow(CDdat),round(nrow(CDdat)*0.8,0),replace = F)
training_data<-CDdat[train,]
testing_data<-CDdat[-train,]
rm(train)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
summary(smlr_Model_1)
ncol<-c("Cost_of_Goods_Sold_EURO","Product_Line","Product_Type")
predValues<-predict(smlr_Model_1,subset(testing_data,select=ncol))
a<-cbind(predValues,testing_data)
summary(a)
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
View(head(dat))
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Product_Line","Geographical_Area")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
set.seed(999)
train<-sample(1:nrow(CDdat),round(nrow(CDdat)*0.8,0),replace = F)
training_data<-CDdat[train,]
testing_data<-CDdat[-train,]
rm(train)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
summary(smlr_Model_1)
ncol<-c("Cost_of_Goods_Sold_EURO","Product_Line","Geographical_Area")
predValues<-predict(smlr_Model_1,subset(testing_data,select=ncol))
a<-cbind(predValues,testing_data)
summary(a)
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Product_Line","Geographical_Area",
"Quantity_units")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
set.seed(999)
train<-sample(1:nrow(CDdat),round(nrow(CDdat)*0.8,0),replace = F)
training_data<-CDdat[train,]
testing_data<-CDdat[-train,]
rm(train)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
summary(smlr_Model_1)
ncol<-c("Cost_of_Goods_Sold_EURO","Product_Line","Geographical_Area","Quantity_units")
predValues<-predict(smlr_Model_1,subset(testing_data,select=ncol))
a<-cbind(predValues,testing_data)
summary(a)
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Product_Line","Geographical_Area",
"Quantity_units","Plant")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
set.seed(999)
train<-sample(1:nrow(CDdat),round(nrow(CDdat)*0.8,0),replace = F)
training_data<-CDdat[train,]
testing_data<-CDdat[-train,]
rm(train)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
summary(smlr_Model_1)
ncol<-c("Cost_of_Goods_Sold_EURO","Product_Line","Geographical_Area","Quantity_units","Plant")
predValues<-predict(smlr_Model_1,subset(testing_data,select=ncol))
a<-cbind(predValues,testing_data)
summary(a)
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Product_Line","Geographical_Area",
"Quantity_units","Plant","Turnover_Range_Euro")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
set.seed(999)
train<-sample(1:nrow(CDdat),round(nrow(CDdat)*0.8,0),replace = F)
training_data<-CDdat[train,]
testing_data<-CDdat[-train,]
rm(train)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
training_data<-CDdat[train,]
CDdat<-subset(dat, select=col)
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Product_Line","Geographical_Area",
"Quantity_units","Plant","Turnover_Range_Euro")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
col<-c("Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Product_Line","Geographical_Area",
"Quantity_units","Plant","Turnover_Range_EURO")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
rm(dat,ndat)
set.seed(999)
train<-sample(1:nrow(CDdat),round(nrow(CDdat)*0.8,0),replace = F)
training_data<-CDdat[train,]
testing_data<-CDdat[-train,]
rm(train)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=training_data)
summary(smlr_Model_1)
ncol<-c("Cost_of_Goods_Sold_EURO","Product_Line","Geographical_Area","Quantity_units","Plant",
"Turnover_Range_EURO")
predValues<-predict(smlr_Model_1,subset(testing_data,select=ncol))
a<-cbind(predValues,testing_data)
summary(a)
rm(list=ls())
source("D:\MDS\4XDemo\4X\Initial\Libraries.R")
source("D:/MDS/4XDemo/4X/Initial/Libraries.R")
rm(list=ls())
rm(list=ls())
source("D:/MDS/4XDemo/4X/Initial/Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
unique(dat$Geographical_Area)
rowNames<-unique(dat$Geographical_Area)
RowNames<-unique(dat$Geographical_Area)
rm(rowNames)
ColumnNames<-unique(dat$Product_Line)
data.frame(row.names = RowNames,ColumnNames)
data.frame(row.names = RowNames)
table1<-data.frame(row.names = RowNames)
table1
tab<-matrix(nrow = 11,ncol = 17)
tab
avg(dat$Customer_related_Issues_Costs)
mean(dat$Customer_related_Issues_Costs)
mean(dat$Customer_related_Issues_Costs[dat$Geographical_Area="ITA"])
mean(dat$Customer_related_Issues_Costs[dat$Geographical_Area=="ITA"])
RowNames
ColumnNames
mean(dat$Customer_related_Issues_Costs[(dat$Geographical_Area=="FRA")&(dat$Product_Line=="Cables")])
RowNames
RowNames[1]
i=1
j=1
for row in RowNames
{
for column in ColumnNames
{
tab[i,j] = mean (dat$Customer_related_Issues_Costs[(dat$Geographical_Area==row)
&(dat$Product_Line==column)])
j=j+1
}
i=i+1
}
for (row in RowNames)
{
for (column in ColumnNames)
{
tab[i,j] = mean (dat$Customer_related_Issues_Costs[(dat$Geographical_Area==row)
&(dat$Product_Line==column)])
j=j+1
}
i=i+1
}
tab[1,1]
tab[1,2]
tab[1,17]
tab[11,17]
tab
tab[0,0]
tab
for (row in RowNames)
{
for (column in ColumnNames)
{
print("Value for row: "+row)
print("Value for Column: "+column)
tab[i,j] = mean (dat$Customer_related_Issues_Costs[(dat$Geographical_Area==row)
&(dat$Product_Line==column)])
j=j+1
}
i=i+1
}
for (row in RowNames)
{
for (column in ColumnNames)
{
print("Value for row: ",row)
print("Value for Column: ",column)
tab[i,j] = mean (dat$Customer_related_Issues_Costs[(dat$Geographical_Area==row)
&(dat$Product_Line==column)])
j=j+1
}
i=i+1
}
tab<-matrix(nrow = 11,ncol = 17)
i=1
j=1
for (row in RowNames)
{
for (column in ColumnNames)
{
print(mean (dat$Customer_related_Issues_Costs[(dat$Geographical_Area==row)
&(dat$Product_Line==column)]))
tab[i,j] = mean (dat$Customer_related_Issues_Costs[(dat$Geographical_Area==row)
&(dat$Product_Line==column)])
j=j+1
}
i=i+1
}
tab
for (row in RowNames)
{
for (column in ColumnNames)
{
print(column)
tab[i,j] = mean (dat$Customer_related_Issues_Costs[(dat$Geographical_Area==row)
&(dat$Product_Line==column)])
j=j+1
}
i=i+1
}
RowNames
tab
i=1
j=1
for (row in RowNames)
{
for (column in ColumnNames)
{
tab[i,j] <- mean (dat$Customer_related_Issues_Costs[(dat$Geographical_Area==row)
&(dat$Product_Line==column)])
j=j+1
}
i=i+1
j=1
}
tab
RowNames
ColumnNames
mean (dat$Customer_related_Issues_Costs[(dat$Geographical_Area=="IAM")
&(dat$Product_Line=="Basic Components")])
IssueCostMatrix<-data.frame(row.names = RowNames,tab)
IssueCostMatrix
colnames(IssueCostMatrix)<-ColumnNames
IssueCostMatrix
IssueCostMatrix[is.nan(IssueCostMatrix)] <- 0
IssueCostMatrix[is.na(IssueCostMatrix)] <- 0
IssueCostMatrix
write.csv(IssueCostMatrix,"CustomerRelatedIsseCostMatrix.csv")
write.csv(IssueCostMatrix,"CustomerRelatedIssu
eCostMatrix.csv")
write.csv(IssueCostMatrix,"CustomerRelatedIssu
eCostMatrix.csv")
source("D:/MDS/4XDemo/4X/Initial/Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
RowNames<-unique(dat$Geographical_Area)
ColumnNames<-unique(dat$Product_Line)
tab<-matrix(nrow = 11,ncol = 17)
i=1
j=1
for (row in RowNames)
{
for (column in ColumnNames)
{
tab[i,j] <- mean (dat$Customer_related_Issues_Costs[(dat$Geographical_Area==row)
&(dat$Product_Line==column)])
j=j+1
}
i=i+1
j=1
}
IssueCostMatrix<-data.frame(row.names = RowNames,tab)
colnames(IssueCostMatrix)<-ColumnNames
IssueCostMatrix[is.na(IssueCostMatrix)] <- 0
write.csv(IssueCostMatrix,"CustomerRelatedIssueCostMatrix.csv")
rm(list=ls())
library(shiny); runApp('Shiny_Framework.R')
runApp('Shiny_Framework.R')
rm(list=ls())
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
dat$Product_Line
unique(dat$Product_Line)
unique(dat$Product_Type)
runApp('Shiny_Framework.R')
rm(list=ls())
source("D:/MDS/4XDemo/4X/Initial/Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
ndat<-dat[
(dat$Cost_of_Goods_Sold_EURO>20)&
(dat$Cost_of_Goods_Sold_EURO<1000000)&
(dat$Customer_related_Issues_Costs<200000)&
(dat$Total_Cost_of_Distribution>10)&
(dat$Total_Cost_of_Distribution<200000)&
(dat$Total_Customer_Order_Management_Costs>10)&
(dat$Total_Customer_Order_Management_Costs<100000)&
(dat$Total_Operations_Costs>10)&
(dat$Total_Operations_Costs<500000),]
summary(ndat)
View(head(ndat))
colnames(ndat)
runApp('Shiny_Framework.R')
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution",
"Total_Customer_Order_Management_Costs","Customer_related_Issues_Costs",
"Total_Operations_Costs","Product_Line","Product_Type","N_Parts",
"Assembly_Labour_Minutes","Machinery_Minutes","Number_of_Deliveries",
"Customer_Class","Turnover_Range_EURO","Geographical_Area")
finalData<-subset(ndat,col)
finalData<-subset(ndat,select=col)
write.csv(finalData,"4X_model.csv")
rm(list=ls())
rm(list=ls())
source("D:/MDS/4XDemo/4X/Initial/Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
ndat<-dat[
(dat$Cost_of_Goods_Sold_EURO>20)&
(dat$Cost_of_Goods_Sold_EURO<1000000)&
(dat$Customer_related_Issues_Costs<200000)&
(dat$Total_Cost_of_Distribution>10)&
(dat$Total_Cost_of_Distribution<200000)&
(dat$Total_Customer_Order_Management_Costs>10)&
(dat$Total_Customer_Order_Management_Costs<100000)&
(dat$Total_Operations_Costs>10)&
(dat$Total_Operations_Costs<500000),]
summary(ndat)
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution",
"Total_Customer_Order_Management_Costs","Customer_related_Issues_Costs",
"Total_Operations_Costs","Product_Line","Product_Type","N_Parts",
"Assembly_Labour_Minutes","Machinery_Minutes","Number_of_Deliveries",
"Customer_Class","Turnover_Range_EURO","Geographical_Area")
finalData<-subset(ndat,select=col)
Summary(finalData)
summary(finalData)
plot(finalData$Cost_of_Goods_Sold_EURO~finalData$Total_Cost_of_Distribution)
plot(finalData$Cost_of_Goods_Sold_EURO,finalData$Total_Cost_of_Distribution)
plot(finalData$Cost_of_Goods_Sold_EURO,finalData$Total_Customer_Order_Management_Costs)
plot(finalData$Cost_of_Goods_Sold_EURO,finalData$Customer_related_Issues_Costs)
plot(finalData$Cost_of_Goods_Sold_EURO,finalData$Total_Operations_Costs)
rm(list=ls())
