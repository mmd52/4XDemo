"Customer_related_Issues_Costs","Product_Line",
"Product_Type","N_Parts",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CSIdat<-subset(dat, select=col)
smlr_Model_1 <- lm(Customer_related_Issues_Costs~.,data=CSIdat)
summary(smlr_Model_1)
rm(list=ls())
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO",
"Supply_Chain_Management_Costs","Product_Line",
"Product_Type","N_Parts","Assembly_Labour_Minutes","Machinery_Minutes",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
OCdat<-subset(dat, select=col)
View(head(OCdat))
OCdat<-OCdat[OCdat$Supply_Chain_Management_Costs!=0,]
summary(OCdat$Supply_Chain_Management_Costs)
min(OCdat$Supply_Chain_Management_Costs)
OCdat<-subset(dat, select=col)
OCdat<-OCdat[OCdat$Supply_Chain_Management_Costs>=0,]
OCdat<-subset(dat, select=col)
OCdat<-OCdat[OCdat$Supply_Chain_Management_Costs>=100,]
summary(OCdat$Supply_Chain_Management_Costs)
OCdat<-OCdat[OCdat$Supply_Chain_Management_Costs>=50,]
summary(OCdat$Supply_Chain_Management_Costs)
OCdat<-subset(dat, select=col)
OCdat<-OCdat[OCdat$Supply_Chain_Management_Costs>=50,]
OCdat<-subset(dat, select=col)
OCdat<-OCdat[OCdat$Supply_Chain_Management_Costs>=20,]
OCdat<-subset(dat, select=col)
OCdat<-OCdat[OCdat$Supply_Chain_Management_Costs>=10,]
OCdat<-subset(dat, select=col)
OCdat<-OCdat[OCdat$Supply_Chain_Management_Costs>=5,]
summary(OCdat$Supply_Chain_Management_Costs)
smlr_Model_1 <- lm(Supply_Chain_Management_Costs~.,data=OCdat)
summary(smlr_Model_1)
smlr_Model_2 <- lm(Supply_Chain_Management_Costs~Geographical_Area+Product_Type+
Product_Line+Cost_of_Goods_Sold_EURO,data=OCdat)
summary(smlr_Model_2)
smlr_Model_3 <- lm(Supply_Chain_Management_Costs~Cost_of_Goods_Sold_EURO,data=OCdat)
summary(smlr_Model_3)
plot(OCdat$Supply_Chain_Management_Costs~OCdat$Cost_of_Goods_Sold_EURO)
summary(OCdat$Cost_of_Goods_Sold_EURO)
OCdat<-OCdat[OCdat$Supply_Chain_Management_Costs<=500000,]
OCdat<-OCdat[OCdat$Cost_of_Goods_Sold_EURO<=500000,]
plot(OCdat$Supply_Chain_Management_Costs~OCdat$Cost_of_Goods_Sold_EURO)
smlr_Model_4 <- lm(Supply_Chain_Management_Costs~Cost_of_Goods_Sold_EURO,data=OCdat)
summary(smlr_Model_4)
smlr_Model_5 <- lm(Supply_Chain_Management_Costs~.,data=OCdat)
summary(smlr_Model_5)
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO",
"Total_Operations_Costs","Product_Line",
"Product_Type","N_Parts","Assembly_Labour_Minutes","Machinery_Minutes",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
OCdat<-subset(dat, select=col)
plot(OCdat$Total_Operations_Costs~OCdat$Cost_of_Goods_Sold_EURO)
OCdat<-OCdat[(OCdat$Cost_of_Goods_Sold_EURO<=500000)&(OCdat$Total_Operations_Costs<=500000),]
plot(OCdat$Total_Operations_Costs~OCdat$Cost_of_Goods_Sold_EURO)
smlr_Model_1 <- lm(Total_Operations_Costs~.,data=OCdat)
summary(smlr_Model_1)
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
View(head(dat))
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CSIdat<-subset(dat, select=col)
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO",
"Customer_related_Issues_Costs","Product_Line",
"Product_Type","N_Parts",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
View(head(CSIdat))
CSIdat<-subset(dat, select=col)
View(head(CSIdat))
summary(CSIdat$Customer_related_Issues_Costs)
plot(CSIdat$Customer_related_Issues_Costs~CSIdat$Cost_of_Goods_Sold_EURO)
CSIdat<-CSIdat[(CSIdat$Customer_related_Issues_Costs<=100000)&
(CSIdat$Cost_of_Goods_Sold_EURO<=500000),]
plot(CSIdat$Customer_related_Issues_Costs~CSIdat$Cost_of_Goods_Sold_EURO)
plot(CSIdat$Customer_related_Issues_Costs[CSIdat$Customer_related_Issues_Costs<=10000]~
CSIdat$Cost_of_Goods_Sold_EURO)
plot(CSIdat$Customer_related_Issues_Costs<=10000~
CSIdat$Cost_of_Goods_Sold_EURO)
plot(CSIdat$Customer_related_Issues_Costs<=100000~
CSIdat$Cost_of_Goods_Sold_EURO)
CSIdat$Customer_related_Issues_Costs<=100000
CSIdat$Customer_related_Issues_Costs[CSIdat$Customer_related_Issues_Costs<=100000,]
CSIdat$Customer_related_Issues_Costs[CSIdat$Customer_related_Issues_Costs<=100000]
plot(CSIdat$Customer_related_Issues_Costs[CSIdat$Customer_related_Issues_Costs<=100000]~
CSIdat$Cost_of_Goods_Sold_EURO)
plot(CSIdat$Customer_related_Issues_Costs[CSIdat$Customer_related_Issues_Costs<=10000]~
CSIdat$Cost_of_Goods_Sold_EURO)
summary(CSIdat$Customer_related_Issues_Costs)
CSIdat<-subset(dat, select=col)
summary(CSIdat$Customer_related_Issues_Costs)
plot(CSIdat$Customer_related_Issues_Costs~CSIdat$Cost_of_Goods_Sold_EURO)
CSIdat<-CSIdat[(CSIdat$Customer_related_Issues_Costs<=20000)&
(CSIdat$Cost_of_Goods_Sold_EURO<=500000),]
plot(CSIdat$Customer_related_Issues_Costs~CSIdat$Cost_of_Goods_Sold_EURO)
smlr_Model_1 <- lm(Customer_related_Issues_Costs~.,data=CSIdat)
summary(smlr_Model_1)
rm(list=ls())
dat<-read.csv('trial.csv',header=TRUE)
View(head(dat))
plot(dat$Salary~dat$Age)
slr<-lm(Salary~.,data=dat)
summary(slr)
Salary=c()
Age=c(32)
df = data.frame(Salary,Age)
df = data.frame(Age)
df
predict(slr,df)
Age=c(30)
df = data.frame(Age)
predict(slr,df)
dat<-read.csv('trial.csv',header=TRUE)
View(head(dat))
slr<-lm(Salary~.,data=dat)
summary(slr)
Age=c(30)
Car=c('Yes')
df = data.frame(Age,Car)
predict(slr,df)
Age=c(27)
Car=c('Yes')
df = data.frame(Age,Car)
predict(slr,df)
Age=c(27,67)
Car=c('Yes','No')
df = data.frame(Age,Car)
predict(slr,df)
rm(list=ls())
#Author @ Mohammed 06/05/2018
#Code used to Fetch/install/Load all libraries required
rm(list=ls())
print("============== Beginning to load libraries  ===================")
setwd("D:/MDS/4XDemo/4X")
#Function To check if
checkInstallLoad <- function(libName)
{
if(!require(libName, character.only=TRUE))
{
install.packages(libName)
require(libName, character.only=TRUE)
}
}
checkInstallLoad("data.table")
checkInstallLoad("Matrix")
checkInstallLoad("Metrics")
checkInstallLoad("stringr")
checkInstallLoad("lubridate")
checkInstallLoad("ggplot2")
checkInstallLoad("pROC")
checkInstallLoad("caret")
checkInstallLoad("caretEnsemble")
checkInstallLoad("e1071")
checkInstallLoad("randomForest")
checkInstallLoad("xgboost")
checkInstallLoad("rpart")
checkInstallLoad("C50")
checkInstallLoad("adabag")
checkInstallLoad("arules")
checkInstallLoad("ROCR")
checkInstallLoad("nnet")
checkInstallLoad("car")
checkInstallLoad("Ckmeans.1d.dp")
checkInstallLoad("psych")
rm(checkInstallLoad)
print("============== Completed loading libraries  ===================")
library(shiny); runApp('Shiny_Framework.R')
runApp('Shiny_Framework.R')
runApp('Shiny_Framework.R')
library(shiny); runApp('Shiny_Framework.R')
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
at$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
at$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution",
"Product_Line","Product_Type","Customer_Class","Turnover_Range_EURO","Geographical_Area")
smlr_Model_TCD <- lm(Total_Cost_of_Distribution~.,data=subset(dat, select=col))
summary(smlr_Model_TCD)
col<-c("Plant","Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution",
"Product_Line","Product_Type","Customer_Class","Turnover_Range_EURO","Geographical_Area")
smlr_Model_TCD <- lm(Total_Cost_of_Distribution~.,data=subset(dat, select=col))
summary(smlr_Model_TCD)
ndat<-dat[(dat$Supply_Chain_Management_Costs=500000)&
(dat$Cost_of_Goods_Sold_EURO=500000)&
(dat$Total_Operations_Costs=500000),]
ndat<-dat[(dat$Supply_Chain_Management_Costs<=500000)&
(dat$Cost_of_Goods_Sold_EURO<=500000)&
(dat$Total_Operations_Costs<=500000),]
ndat<-dat[(dat$Supply_Chain_Management_Costs<=500000)&
(dat$Cost_of_Goods_Sold_EURO<=500000)&
(dat$Total_Operations_Costs<=500000),]
ndat<-dat[(dat$Supply_Chain_Management_Costs<=500000)&
(dat$Cost_of_Goods_Sold_EURO<=500000)&
(dat$Total_Operations_Costs<=500000),]
View(head(ndat))
View(head(dat))
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
ndat<-dat[(dat$Supply_Chain_Management_Costs<=500000)&
(dat$Cost_of_Goods_Sold_EURO<=500000)&
(dat$Total_Operations_Costs<=500000),]
View(head(dat))
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
dat<-dat[(dat$Supply_Chain_Management_Costs<=500000)&
(dat$Cost_of_Goods_Sold_EURO<=500000)&
(dat$Total_Operations_Costs<=500000),]
col<-c("Plant","Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution",
"Product_Line","Product_Type","Customer_Class","Turnover_Range_EURO","Geographical_Area")
smlr_Model_TCD <- lm(Total_Cost_of_Distribution~.,data=subset(dat, select=col))
summary(smlr_Model_TCD)
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
ndat<-dat[(dat$Supply_Chain_Management_Costs<=500000)&
(dat$Cost_of_Goods_Sold_EURO<=500000)&
(dat$Total_Operations_Costs<=500000),]
col<-c("Plant","Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution",
"Product_Line","Product_Type","Customer_Class","Turnover_Range_EURO","Geographical_Area")
smlr_Model_TCD <- lm(Total_Cost_of_Distribution~.,data=subset(dat, select=col))
summary(smlr_Model_TCD)
smlr_Model_COM <- lm(Total_Customer_Order_Management_Costs~.,data=subset(dat, select=col))
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO",
"Total_Customer_Order_Management_Costs","Product_Line","Product_Type",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
smlr_Model_COM <- lm(Total_Customer_Order_Management_Costs~.,data=subset(dat, select=col))
summary(smlr_Model_COM)
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO",
"Total_Customer_Order_Management_Costs","Product_Line","Product_Type",
"Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
smlr_Model_COM <- lm(Total_Customer_Order_Management_Costs~.,data=subset(dat, select=col))
summary(smlr_Model_COM)
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO",
"Total_Customer_Order_Management_Costs","Product_Line","Product_Type",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
col<-c("Plant","Cost_of_Goods_Sold_EURO",
"Total_Customer_Order_Management_Costs","Product_Line","Product_Type",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
smlr_Model_COM <- lm(Total_Customer_Order_Management_Costs~.,data=subset(dat, select=col))
summary(smlr_Model_COM)
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO",
"Total_Customer_Order_Management_Costs","Product_Line","Product_Type",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
smlr_Model_COM <- lm(Total_Customer_Order_Management_Costs~.,data=subset(dat, select=col))
summary(smlr_Model_COM)
smlr_Model_COM <- lm(Total_Customer_Order_Management_Costs~.,data=subset(ndat, select=col))
summary(smlr_Model_COM)
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO",
"Total_Operations_Costs","Product_Line",
"Product_Type","N_Parts","Assembly_Labour_Minutes","Machinery_Minutes",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
smlr_Model_OC <- lm(Total_Customer_Order_Management_Costs~.,data=subset(ndat, select=col))
smlr_Model_OC <- lm(Total_Operations_Costs~.,data=subset(ndat, select=col))
summary(smlr_Model_OC)
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO",
"Supply_Chain_Management_Costs","Product_Line",
"Product_Type","N_Parts","Assembly_Labour_Minutes","Machinery_Minutes",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
smlr_Model_SC <- lm(Supply_Chain_Management_Costs~.,data=subset(ndat, select=col))
summary(smlr_Model_SC)
col<-c("Plant","Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution",
"Product_Line","Product_Type","Customer_Class","Turnover_Range_EURO","Geographical_Area")
smlr_Model_TCD <- lm(Total_Cost_of_Distribution~.,data=subset(nat, select=col))
smlr_Model_TCD <- lm(Total_Cost_of_Distribution~.,data=subset(ndat, select=col))
summary(smlr_Model_TCD)
rm(list=ls())
library(shiny); runApp('Shiny_Framework.R')
runApp('Shiny_Framework.R')
runApp('Shiny_Framework.R')
rm(list=ls())
source("Libraries.R")
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
dat<-dat[(dat$Supply_Chain_Management_Costs<=500000)&
(dat$Cost_of_Goods_Sold_EURO<=500000)&
(dat$Total_Operations_Costs<=500000),]
counts <- table(dat$Customer_Class, dat$Geographical_Area)
count
counts
barplot(counts, main="Car Distribution by1 Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
a<-['25','121','32']
a<-[25,1211,32]
a<-c(25,1211,32)
a
barplot(a, main="MMD",
xlab="Cost Breakup", col=c("darkblue","red","green"),
legend = c('a','b','c'))
a<-data.frame(c(25,1211,32))
a
a<-data.frame(c(25,1211,32))
barplot(a, main="MMD",
xlab="Cost Breakup", col=c("darkblue","red","green"),
legend = c('a','b','c'))
a<-c(25,12,32)
barplot(a, main="MMD",
xlab="Cost Breakup", col=c("darkblue","red","green"),
legend = c('a','b','c'))
table(a)
require(ggplot2)
require(reshape2)
dat_m <- melt(a)
dat_m
barplot(dat_m, main="Car Distribution by1 Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
ggplot(dat_m, aes(a, fill = c('a','b','c'))) +
geom_bar(stat = "identity")
ggplot(dat_m, aes(a, a,fill = c('a','b','c'))) +
geom_bar(stat = "identity")
ggplot(dat_m, aes(a,c('X','Y','Z'),fill = c('a','b','c'))) +
geom_bar(stat = "identity")
ggplot(dat_m, aes(a,range(0,100),fill = c('a','b','c'))) +
geom_bar(stat = "identity")
ggplot(dat_m, aes(a,c(10,20,30,50),fill = c('a','b','c'))) +
geom_bar(stat = "identity")
ggplot(dat_m, aes(a,c(10,20,30),fill = c('a','b','c'))) +
geom_bar(stat = "identity")
ggplot(dat_m, aes(dat_m,c(10,20,30),fill = c('a','b','c'))) +
geom_bar(stat = "identity")
ggplot(dat_m, aes(a,c(10,20,30),fill = c('a','b','c'))) +
geom_bar(stat = "identity")
ggplot(a, aes(a,c(10,20,30),fill = c('a','b','c'))) +
geom_bar(stat = "identity")
ggplot(dat_m, aes(a,c(10,20,30),fill = c('a','b','c'))) +
geom_bar(stat = "identity")
data=matrix(c(10,30,20) , nrow=1)
data
colnames(data)=c("TCD","COM","OC")
rownames(data)=c("Cost")
data
barplot(data, col=colors()[c(23,89,12)] , border="white", space=0.04, font.axis=2, xlab="group")
barplot(data, col=colors()[c(23,89,12)] , border="white", font.axis=2, beside=T, legend=rownames(data), xlab="group", font.lab=2)
data=matrix(c(10,30,20) , nrow=3)
data
colnames(data)=c("Cost")
rownames(data)=c("TCD","COM","OC")
data
barplot(data, col=colors()[c(23,89,12)] , border="white", space=0.04, font.axis=2, xlab="group")
barplot(data, col=colors()[c(23,89,12)] , border="white", font.axis=2, beside=T, legend=rownames(data), xlab="group", font.lab=2)
barplot(data, col=colors()[c(23,89,12)] , border="white", space=0.04, font.axis=2, xlab="group")
barplot(data, border="white", space=0.04, font.axis=2, xlab="group")
barplot(data, border="white", space=0.04, font.axis=2, xlab="group",legend=rownames(data))
barplot(data, border="white", space=0.04, font.axis=2, xlab="group",legend=rownames(data),horiz=True)
barplot(data, border="white", space=0.04, font.axis=2, xlab="group",legend=rownames(data),horiz=T)
barplot(data, border="white", space=0.04, font.axis=2,
xlab="group",legend=rownames(data),horiz=T,height = 10)
barplot(data, border="white", space=0.04, font.axis=2,
xlab="group",legend=rownames(data),horiz=T,height = 100)
barplot(data, border="white", space=0.04, font.axis=2,
xlab="group",legend=rownames(data),horiz=T)
barplot(data, col=colors()[c(23,89,12)] , border="white", font.axis=2, beside=T, legend=rownames(data), xlab="group", font.lab=2)
barplot(data, col=colors()[c(23,89,12)] , border="white", font.axis=2, beside=T, legend=rownames(data), font.lab=2)
barplot(data, col=colors()[c(23,89,12)] , border="white", font.axis=2, legend=rownames(data), xlab="group", font.lab=2)
barplot(data, col=colors()[c(23,89,12)] , border="white", font.axis=2, legend=rownames(data),
horiz=TRUE, font.lab=2)
qplot(x = data$Cost, y = c(10,20,30), data = data, geom = "bar", fill = variable)
qplot(x = Cost, y = c(10,20,30), data = data, geom = "bar", fill = variable)
rm(list=ls())
rm(list=ls())
source("Libraries.R")
Salary<-c(100,150,350,250,200,450,650)
Age<-c(25,27,30,32,35,37,39)
a<-data.frame(Salary,Age)
a
model<-lm(Salary~Age,data=a)
Summary(model)
summary(model)
Salary<-c(100,150,350,250,270,450,650)
Age<-c(25,27,30,32,35,37,39)
a<-data.frame(Salary,Age)
model<-lm(Salary~Age,data=a)
summary(model)
Age<-c(31)
b<-data.frame(Age)
model.predict(b)
predict(model,b)
280.6039+(2*96.87)
280.6039-(2*96.87)
280.6039-(1*96.87)
280.6039+(1*96.87)
model$residuals
model$coefficients
model$model
sqrt(deviance(model)/df.residual(model))
predict(model,b)+sqrt(deviance(model)/df.residual(model))
predict(model,b)-sqrt(deviance(model)/df.residual(model))
rm(list=ls())
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
View(head(dat))
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO",
"Total_Operations_Costs","Product_Line",
"Product_Type","N_Parts","Assembly_Labour_Minutes","Machinery_Minutes",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO",
"Supply_Chain_Management_Costs","Product_Line",
"Product_Type","N_Parts","Assembly_Labour_Minutes","Machinery_Minutes",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
OCdat<-subset(dat, select=col)
OCdat<-OCdat[OCdat$Supply_Chain_Management_Costs>=5,]
summary(OCdat$Supply_Chain_Management_Costs)
smlr_Model_1 <- lm(Supply_Chain_Management_Costs~.,data=OCdat)
summary(smlr_Model_1)
smlr_Model_2 <- lm(Supply_Chain_Management_Costs~Geographical_Area+Product_Type+
Product_Line+Cost_of_Goods_Sold_EURO,data=OCdat)
summary(smlr_Model_2)
smlr_Model_3 <- lm(Supply_Chain_Management_Costs~Cost_of_Goods_Sold_EURO,data=OCdat)
summary(smlr_Model_3)
plot(OCdat$Supply_Chain_Management_Costs~OCdat$Cost_of_Goods_Sold_EURO)
OCdat<-OCdat[OCdat$Supply_Chain_Management_Costs<=500000,]
OCdat<-OCdat[OCdat$Cost_of_Goods_Sold_EURO<=500000,]
plot(OCdat$Supply_Chain_Management_Costs~OCdat$Cost_of_Goods_Sold_EURO)
smlr_Model_4 <- lm(Supply_Chain_Management_Costs~Cost_of_Goods_Sold_EURO,data=OCdat)
summary(smlr_Model_4)
smlr_Model_5 <- lm(Supply_Chain_Management_Costs~.,data=OCdat)
summary(smlr_Model_5)
rm(list=ls())
library(shiny); runApp('Shiny_Framework.R')
rm(list=ls())
source("Libraries.R")
dat<-read.csv('4Xdata.csv',header=TRUE)
dat<-dat[,-1]
col<-c("Plant","Quantity_units","Total_Cost_of_Distribution",
"Product_Line","Product_Type","N_Parts",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=CDdat)
summary(smlr_Model_1)
col<-c("Plant","Quantity_units","Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution",
"Product_Line","Product_Type","N_Parts",
"Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class",
"Turnover_Range_EURO","Geographical_Area")
dat$Average_Delivery_Batch_Size_units<-as.numeric(dat$Average_Delivery_Batch_Size_units)
dat$Number_of_Deliveries<-as.numeric(dat$Number_of_Deliveries)
CDdat<-subset(dat, select=col)
smlr_Model_1 <- lm(Total_Cost_of_Distribution~.,data=CDdat)
summary(smlr_Model_1)
dat<-read.csv('trial.csv',header=TRUE)
Salary<-c(100,150,350,250,270,450,650)
Age<-c(25,27,30,32,35,37,39)
a<-data.frame(Salary,Age)
model<-lm(Salary~Age,data=a)
Age<-c(31)
b<-data.frame(Age)
predict(model,b)+sqrt(deviance(model)/df.residual(model))
280.6039+(1*96.87)
280.6039-(1*96.87)
predict(model,b)+sqrt(deviance(model)/df.residual(model))
predict(model,b)
predict(model,b)+sqrt(deviance(model)/df.residual(model))
predict(model,b)-sqrt(deviance(model)/df.residual(model))
rm(list=ls())
